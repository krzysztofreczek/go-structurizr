name: CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    name: Build (${{ matrix.go-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22, 1.23, 1.24]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: go.sum

      - name: Install tooling
        run:
        - go install github.com/go-task/task/v3/cmd/task@latest
        - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Lint
        run: task lint

      - name: Test
        run: task test

      - name: Slack notification (fail)
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "<!here> Build failed :x:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack notification (pass)
        if: success()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Build succeeded :white_check_mark:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-examples:
    name: Build Examples (Go 1.23)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          cache-dependency-path: go.sum

      - name: Install tooling
        run:
          - go install github.com/go-task/task/v3/cmd/task@latest
          - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Test examples
        run: task test_examples

      - name: Slack notification (fail)
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "<!here> Build examples failed :x:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack notification (pass)
        if: success()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Build examples succeeded :white_check_mark:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Publish Release on GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          . ./.github/next_version.sh
          VERSION=$(next_version $(git describe --tags --abbrev=0) 2)

          go install github.com/tcnksm/ghr@latest
          ghr -t ${GITHUB_TOKEN} -u ${GITHUB_REPOSITORY_OWNER} -r $(basename ${GITHUB_REPOSITORY}) -c ${GITHUB_SHA} ${VERSION}

      - name: Slack notification (fail)
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "<!here> Release failed :x:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack notification (pass)
        if: success()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Release succeeded :rocket:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
